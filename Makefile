# get the normalized current directory
THIS_DIR := $(shell pwd)


# Get number of jobs Make is being called with "only works with '-j'"
MAKE_PID := $(shell echo $$PPID)
JOB_FLAG := $(filter -j%, $(subst -j ,-j,$(shell ps T | grep "^\s*$(MAKE_PID).*$(MAKE)")))
JOBS := $(subst -j,,$(JOB_FLAG))
ifeq "$(JOBS)" ""
   JOBS := 1
endif


# Default to a Debug build. If you want to enable debugging flags, run
# "make BUILD_TYPE=Release"
BUILD_TYPE ?= Debug
ifneq "$(BUILD_TYPE)" "Debug"
    ifneq "$(BUILD_TYPE)" "Release"
        $(error Bad BUILD_TYPE value "$(BUILD_TYPE)" please use "Debug" or "Release")
    endif
endif
BUILD_TYPE_LOWER := $(shell echo $(BUILD_TYPE) | tr A-Z a-z)


# Figure out where to build the software. Use BUILD_PREFIX if it was passed in.
BUILD_PREFIX ?= $(THIS_DIR)/build/$(BUILD_TYPE_LOWER)


INSTALL_PREFIX ?= $(shell echo $(THIS_DIR)/build/$(BUILD_TYPE_LOWER)/install )


# Default to a Debug build. If you want to enable debugging flags, run
# "make BUILD_TYPE=Release"
CLANG_TIDY_FIX ?= OFF
ifneq "$(CLANG_TIDY_FIX)" "ON"
    ifneq "$(CLANG_TIDY_FIX)" "OFF"
        $(error Bad CLANG_TIDY_FIX value "$(CLANG_TIDY_FIX)" please use "ON" or "OFF")
    endif
endif

ifeq "$(CMAKE_OPTIONS)" ""
    CMAKE_OPTIONS := -DCLANG_TIDY_FIX=$(CLANG_TIDY_FIX) -DCMAKE_INSTALL_PREFIX=$(INSTALL_PREFIX) -DCMAKE_BUILD_TYPE=$(BUILD_TYPE)
else
   # force cmake to be re-run if we change the cmake options
   $(shell rm $(BUILD_PREFIX)/Makefile)
endif


PREAMBLE := export CTEST_OUTPUT_ON_FAILURE=1;


.PHONY: all
all: $(BUILD_PREFIX)/Makefile
	$(PREAMBLE) \
	$(MAKE) -C $(BUILD_PREFIX)


.PHONY: everything
everything: all
	$(PREAMBLE) \
	$(MAKE) -C $(BUILD_PREFIX) install


$(BUILD_PREFIX)/Makefile:
	# create the temporary build directory if needed
	mkdir -p $(BUILD_PREFIX)
	touch -c $@
	# run CMake to generate and configure the build scripts
	ln -sf $(BUILD_PREFIX)/compile_commands.json compile_commands.json && \
	cd $(BUILD_PREFIX) && \
	cmake ../.. $(CMAKE_OPTIONS); \


# Other (custom) targets are passed through to the cmake-generated Makefile
%: $(BUILD_PREFIX)/Makefile
	$(PREAMBLE) \
	$(MAKE) -C $(BUILD_PREFIX) $@ -- ${args}


.PHONY: h
h:
	@echo "make [OPTIONS...] [TARGETS...]"
	@echo
	@echo "TARGETS:"
	@echo
	@echo "everything   Combines the following: all, install,"
	@echo
	@echo "<generated>  any targets generated by cmake should also be avaialble"
	@echo
	@echo "OPTIONS:"
	@echo
	@echo "BUILD_TYPE=<Debug|Release>"
	@echo "             Defaults to Debug"
	@echo
	@echo "EXAMPLES:"
	@echo "make BUILD_TYPE=Release all -j8"
